name: CI
on:
    push:
        paths:
            - "assets/**"
            - "src/**"
            - "tests/**"
            - "dev/**"
            - ".github/workflows/*"
            - "lock.json"
env:
    denoVersion: "v1.20.5"
jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            -   name: Clone repository
                uses: actions/checkout@v2
                with:
                    submodules: false
                    persist-credentials: false

            -   name: Setup Deno
                uses: denoland/setup-deno@main
                with:
                    deno-version: "${{ env.denoVersion }}"

            -   name: Format
                run: deno fmt --check src tests dev

            -   name: Lint
                run: deno lint --unstable src tests dev

    test:
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            -   name: Clone repository
                uses: actions/checkout@v2
                with:
                    submodules: true
                    persist-credentials: false

            -   name: Setup Deno
                uses: denoland/setup-deno@main
                with:
                    deno-version: "${{ env.denoVersion }}"

            -   name: Cache dependencies
                uses: actions/cache@v2
                env:
                    cache-name: cache-deno
                with:
                    # deno cache files are stored in `~/.cache/deno` on Linux/macOS
                    path: ~/.cache/deno
                    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/lock.json') }}
                    restore-keys: |
                        ${{ runner.os }}-build-${{ env.cache-name }}-
                        ${{ runner.os }}-build-
                        ${{ runner.os }}-

            -   name: Run tests
                run: deno test --lock=lock.json --coverage=./cov --unstable --allow-all --fail-fast

            -   name: Generate lcov
                run: deno coverage --exclude=tests\.* --unstable --lcov ./cov > cov.lcov

            -   name: Upload coverage
                uses: codecov/codecov-action@v3
                with:
                    files: cov.lcov
                    token: ${{ secrets.CODECOV_TOKEN }}

# TODO bundle jobs
